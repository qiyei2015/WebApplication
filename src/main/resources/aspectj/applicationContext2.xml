<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--XML的配置方式完成AOP的开发===============-->

    <!--目标类===================-->
    <bean id="customerDao" class="com.qiyei.aspectjdemo.demo2.CustomerDaoImpl"/>

    <!--定义切面-->
    <bean id="myAspectXml" class="com.qiyei.aspectjdemo.demo2.MyAspectXml"/>

    <!--aop的相关配置=================-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="point1" expression="execution(* com.qiyei.aspectjdemo.demo2.CustomerDao.save(..))"/>
        <aop:pointcut id="point2" expression="execution(* com.qiyei.aspectjdemo.demo2.CustomerDao.update(..))"/>
        <aop:pointcut id="point3" expression="execution(* com.qiyei.aspectjdemo.demo2.CustomerDao.delete(..))"/>
        <aop:pointcut id="point4" expression="execution(* com.qiyei.aspectjdemo.demo2.CustomerDao.findOne(..))"/>
        <aop:pointcut id="point5" expression="execution(* com.qiyei.aspectjdemo.demo2.CustomerDao.findAll(..))"/>

        <!--配置AOP的切面-->
        <aop:aspect ref="myAspectXml">
            <!--配置前置通知-->
            <aop:before method="before" pointcut-ref="point1"/>
            <!--配置后置通知-->
            <aop:after-returning method="afterReturing" pointcut-ref="point2" returning="result"/>
            <!--配置环绕通知-->
            <aop:around method="around" pointcut-ref="point3"/>
            <!--配置异常抛出通知-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="point4" throwing="e"/>
            <!--配置最终通知-->
            <aop:after method="after" pointcut-ref="point5"/>
        </aop:aspect>
    </aop:config>

</beans>